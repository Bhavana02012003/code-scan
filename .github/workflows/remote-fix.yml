name: Remote Code AutoFix

on:
  repository_dispatch:
    types: [fix-violation]

permissions:
  contents: write

jobs:
  fix:
    if: github.event.action == 'fix-violation' || github.event.action == 'fix_violation'
    runs-on: ubuntu-latest
    env:
      OWNER:  ${{ github.event.client_payload.owner }}
      REPO:   ${{ github.event.client_payload.repo }}
      BRANCH: ${{ github.event.client_payload.branch || 'main' }}
      TECH:   ${{ github.event.client_payload.technology }}
      FILE:   ${{ github.event.client_payload.file }}
      RULE:   ${{ github.event.client_payload.rule }}

    steps:
      - name: ðŸª™ Generate GitHub App token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          installation_retrieval_mode: repository
          installation_retrieval_payload: ${{ env.OWNER }}/${{ env.REPO }}

      - name: ðŸ“¥ Clone target repo
        run: |
          git config --global user.name "autofix-bot"
          git config --global user.email "autofix@example.com"
          git clone --branch "$BRANCH" \
            https://x-access-token:${{ steps.generate_token.outputs.token }}@github.com/${OWNER}/${REPO}.git target

      - name: ðŸ”§ Autofix â€¢ Python (autopep8)
        if: env.TECH == 'Python'
        working-directory: target
        run: |
          python -m pip install --upgrade pip
          pip install autopep8
          [ -n "$FILE" ] && [ -f "$FILE" ] && autopep8 -i "$FILE" || autopep8 -ri .

      - name: ðŸ“¤ Commit & push if changed
        working-directory: target
        env:
          TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "ðŸ¤– Auto-fix (${RULE:-rule}) from UI"
            git push https://x-access-token:${TOKEN}@github.com/${OWNER}/${REPO}.git HEAD:$BRANCH
          else
            echo "âœ… No changes to commit."
          fi
