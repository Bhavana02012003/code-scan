name: Remote Code AutoFix

on:
  repository_dispatch:
    types: [fix-violation]

permissions:
  contents: write

jobs:
  fix:
    runs-on: ubuntu-latest
    env:
      OWNER:  ${{ github.event.client_payload.owner }}
      REPO:   ${{ github.event.client_payload.repo }}
      BRANCH: ${{ github.event.client_payload.branch || 'main' }}
      TECH:   ${{ github.event.client_payload.technology }}
      FILE:   ${{ github.event.client_payload.file }}
      RULE:   ${{ github.event.client_payload.rule }}

    steps:
      - name: Generate GitHub App token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          installation_retrieval_mode: repository
          installation_retrieval_payload: ${{ env.OWNER }}/${{ env.REPO }}

      - name: Clone target repo
        run: |
          git config --global user.name "autofix-bot"
          git config --global user.email "autofix@example.com"
          git clone --branch "$BRANCH" \
            https://x-access-token:${{ steps.generate_token.outputs.token }}@github.com/${OWNER}/${REPO}.git target
      # ðŸ”¹ Apply language-specific safe fixes
      - name: Autofix â€¢ React (ESLint --fix)
        if: ${{ env.TECH == 'React' }}
        working-directory: target
        run: |
          npm ci || npm install
          if [ -n "$FILE" ] && [ -f "$FILE" ]; then
            npx eslint "$FILE" --ext .js,.jsx,.ts,.tsx --fix || true
          else
            npx eslint . --ext .js,.jsx,.ts,.tsx --fix || true
          fi
      - name: Autofix â€¢ .NET (dotnet format)
        if: ${{ env.TECH == 'DotNet' }}
        working-directory: target
        run: |
          dotnet tool install -g dotnet-format
          export PATH="$HOME/.dotnet/tools:$PATH"
          TARGET=$( (ls *.sln 2>/dev/null || true; ls *.csproj 2>/dev/null || true) | head -n 1 )
          if [ -n "$TARGET" ]; then
            dotnet format "$TARGET" || true
          else
            dotnet format || true
          fi
      - name: Autofix â€¢ Python (autopep8)
        if: ${{ env.TECH == 'Python' }}
        working-directory: target
        run: |
          python -m pip install --upgrade pip
          pip install autopep8
          if [ -n "$FILE" ] && [ -f "$FILE" ]; then
            autopep8 -i "$FILE" || true
          else
            autopep8 -ri . || true
          fi
      # (Skip Salesforce Apex and Java PMD â€“ no safe auto-fix available)

      - name: Commit & push if changed
        working-directory: target
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "Autofix (${RULE:-rule}) from orchestrator"
            git push
            echo "Pushed autofix."
          else
            echo "No changes to commit."
          fi